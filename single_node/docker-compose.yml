services:
  es01:
    build:
      context: ./collection
      dockerfile: Dockerfile
    container_name: es01
    environment:
      - discovery.type=single-node
      - node.name=es01
      - cluster.name=elastic-cluster
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
      - xpack.security.http.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 2g
    volumes:
      - ./esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - elastic

  kibana:
    image: docker.elastic.co/kibana/kibana:8.17.4
    container_name: kib01
    environment:
      - ELASTICSEARCH_HOSTS=http://es01:9200
      - xpack.security.enabled=false
    ports:
      - "5601:5601"
    networks:
      - elastic
    depends_on:
      - es01

  fapi01:
    build:
      context: ./generation
      dockerfile: Dockerfile
    container_name: fapi01
    ports:
      - "8000:8000"
    environment:
      - TZ=Asia/Seoul
    volumes:
      - ./elastic_indexs:/app/elastic_indexs
    networks:
      - elastic
    depends_on:
      es01:
        condition: service_healthy

  celebro:
    build:
      context: ./monitoring
      dockerfile: Dockerfile
    container_name: celebro
    environment:
      - ELASTICSEARCH_HOSTS=http://es01:9200
    ports:
      - "9000:9000"
    networks:
      - elastic

networks:
  elastic:
